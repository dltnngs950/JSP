Maven Project

Client Server Architecture 와 Web Architecture 비교

Web architecture의 장점

앞으로 개발시 필요한 환경들 ( 이클립스, tomcat, oracle 등)

형상관리의 필요성 이해

80

Tomcat : 웹 어플리케이션 서버 / 웹 컨테이너 

Maven Project

Group id : 해당 프로젝트를 진행하는 회사에 대한 정보
	 일반적으로 회사의 도메인 역순으로 기술
	naver.com ==> moc.revan ( x )
		 ==> com.naver ( o )
	google.com ==> com.google 
	ddit.or.kr ==> kr.or.ddit

Artifact id : Group id 에 해당하는 회사에서 진행하는 프로젝트명
google : GMAIL, GOOGLE DRIVE etc...

version : 프로젝트의 버전
	대.중.소 3.5.2

JAR : Java Archive ( 보관소 ) 
	클래스들을 묶어 놓은 파일, 압축파일

Class, html, jsp, image, css, javascript

war : Web Archive 
	웹 프로그램을 묶어 놓은 파일

       Tomcat의 wbapps폴더에 war파일을 복사 해놓고 톰갯을 기도하면
       war파일을 톰캣이 자동으로 압축을 해제하여 웹 어플리케이션이 서비스 되도록 한다

개발과정에서 src/text/java 폴더들이 필요하다

실제 서버 배포에는 필요하지 않다.

pom : project object model - 프로젝트에 대한 설정 정보
	    해당 프로젝트를 만든 회사
	    프로젝트 이름
	    프로젝트 버전
	    프로젝트에서 필요로하는 의존성(dependency) - 라이브러리(ojbdc6.jar)
pom.xml
























